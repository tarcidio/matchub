# 1st Build: NODE
FROM node:20.11.0 as build-stage

# Set ARG to facilitate any changes in the future
ARG PROJECT_PATH=../../matchub-web/matchub-web/

# Set the working directory
WORKDIR /node-alpine

# Copy package.json and package-lock.json (or yarn.lock): contain the list of project dependencies
# `package*.json`: filename pattern that starts with `package` and ends with `.json`
COPY ${PROJECT_PATH}package*.json ./

# Install all dependencies
RUN npm install

# Copy the rest of the application code
COPY ${PROJECT_PATH} .

# Build the application
RUN npm run build -- --output-path=./dist/out --configuration production

# 2nd Build: NGINX
FROM nginx:latest as production-stage

# Set ARG to facilitate any changes in the future
ARG PROJECT_PATH=matchub-web/matchub-web/
# MAJOR: 1 (dependency); MINOR: 0 (feature); PATCH: 0 (bugs)
ARG PROJECT_VERSION=1.0.0

# Set LABEL for description purposes
LABEL org.opencontainers.image.title="MatcHub - Angular Image Application" \
      org.opencontainers.image.version="${PROJECT_VERSION}" \
      org.opencontainers.image.description="This Angular application serves as the frontend for the MatcHub platform, \
      designed to interact seamlessly with the Spring backend. It fully utilizes Angular's framework capabilities, \
      including components, modules, routing, services, and guards. \
      These features are integral for robust data validation and user authentication, \
      ensuring a secure and efficient user experience. \
      The application architecture is optimized for scalability and performance in cloud environments." \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.authors="https://www.linkedin.com/in/tarcidio/" \
      org.opencontainers.image.source="https://github.com/tarcidio/matchub-web" \
      org.opencontainers.image.documentation="https://github.com/tarcidio/matchub-web/blob/main/README.md"

# Do not set to avoid affecting standard directories that nginx uses
# WORKDIR /web

# Copy the build output to replace the default nginx contents.
# Nginx is configured to serve files from the directory `/usr/share/nginx/html`
COPY --from=build-stage /node-alpine/dist/out/browser /usr/share/nginx/html

# COPY docker/nginx.conf /etc/nginx/nginx.conf
COPY ../../matchub-web/docker/nginx.conf /etc/nginx/conf.d/default.conf

# Define a volume for Nginx logs
VOLUME /var/log/nginx

# Expose port 80
EXPOSE 80

# Run nginx
CMD ["nginx", "-g", "daemon off;"]